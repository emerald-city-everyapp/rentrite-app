@use "sass:meta";
@use "sass:math";
@use "sass:map";
@use "breakpoints" as *;
@use "sizes" as *;
@use "tokens" as *;
@use "typography" as *;

@mixin mq($size) {
  @if map.has-key($breakpoints, $size) {
    $breakpoint: map-get($breakpoints, $size);
    @media screen and (min-width: $breakpoint) {
      @content;
    }
  } @else if meta.type-of($size) == number {
    @if math.is-unitless($size) {
      @error 'when using a number with @mq() make sure to include a unit';
    } @else {
      @media screen and (min-width: $size) {
        @content;
      }
    }
  } @else {
    @error 'the keyword #{$size} is not in the $breakpoints map';
  }
}

@mixin heading($fs, $color: $heading-color-default) {
  font-size: $fs;
  color: $color;
  font-family: $heading-font-family;
  text-transform: $heading-text-transform;
  letter-spacing: $heading-letter-spacing;
  font-weight: $heading-font-weight;
  line-height: $heading-line-height;
}

@mixin button($fs, $ff, $color: $button-color-default, $bg-color: $button-bg-color-default) {
  background-color: $bg-color;
  border-radius: $border-radius-1;
  border-top: 2px solid $search-button-border-t;//add these variables to pass in?
  border-left: 2px solid $search-button-border-l;
  border-bottom: 2px solid $search-button-border-b;
  border-right: 2px solid $search-button-border-r;
  color: $color;
  cursor: pointer;
  font-family: $ff;
  font-size: $fs;
  max-width: fit-content;
  padding-inline: 1rem;
}

@mixin border(
  $top: $border-default-top, 
  $left: $border-default-left, 
  $bottom: $border-default-bottom, 
  $right: $border-default-right) {
    border-top: 2px solid $top;
    border-left: 2px solid $left;
    border-bottom: 2px solid $bottom;
    border-right: 2px solid $right;
}

@mixin border2(
  $top: $border-default-top, 
  $left: $border-default-left, 
  $bottom: $border-default-bottom, 
  $right: $border-default-right) {
    border-top: 1px solid $top;
    border-left: 1px solid $left;
    border-bottom: 1px solid $bottom;
    border-right: 1px solid $right;
}